apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  namespace: plex
spec:
  interval: 15m
  chart:
    spec:
      chart: plex
      version: 20.4.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 30m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    plex:
      # User Defined
      serverIP: ${PLEX_IP}
      # additionalAdvertiseURL: "http://${PLEX_IP}:32400,https://${PLEX_IP}:32400,https://${NGINX_EXTERNAL_IP}:443,https://${NGINX_EXTERNAL_IP}:32400"
      # disableGDM: true
      requireHTTPS: true # First Deploy set to false, till remote acces is configured and working then you can set to true
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${PLEX_IP}
        integrations:
          metallb:
            enabled: true
    global:
      stopAll: false
    credentials:
      cloudflare:
        type: s3
        url: "${CLOUDFLARE_BUCKET_URL}"
        bucket: "plex"
        accessKey: "${CLOUDFLARE_BUCKET_ACCESS_KEY}"
        secretKey: "${CLOUDFLARE_BUCKET_SECRET_KEY}"
        encrKey: "${CLOUDFLARE_BUCKET_ENCR_KEY}"
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
          homepage:
            enabled: true
            group: Media
            name: Plex
            widget:
              enabled: false
              custom:
                key: ${PLEX_TOKEN}
        hosts:
          - host: plex.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
    persistence:
      config:
        volsync:
        - name: config-new
          type: restic
          credentials: cloudflare
          dest:
            enabled: false
          src:
            enabled: true
            trigger:
                schedule: 30 2 * * *
      movies:
        enabled: true
        type: nfs
        path: /mnt/MAIN/Movies
        mountPath: /media/Movies
        server: ${TRUENAS_IP}
      series:
        enabled: true
        type: nfs
        path: /mnt/MAIN/Series
        mountPath: /media/Series
        server: ${TRUENAS_IP}
      music:
        enabled: true
        type: nfs
        path: /mnt/MAIN/Music
        mountPath: /media/Music
        server: ${TRUENAS_IP}
    workload:
      main:
        podSpec:
          runtimeClassName: nvidia
          containers:
            main:
              # env:
                # ALLOWED_NETWORKS: 172.16.0.0/12,10.0.0.0/8,192.168.0.0/16,192.168.2.0/16
              resources:
                limits:
                  nvidia.com/gpu: 1
